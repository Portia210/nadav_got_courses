# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Student(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, name: str=None, age: int=None, email: str=None, course: str=None):  # noqa: E501
        """Student - a model defined in Swagger

        :param id: The id of this Student.  # noqa: E501
        :type id: int
        :param name: The name of this Student.  # noqa: E501
        :type name: str
        :param age: The age of this Student.  # noqa: E501
        :type age: int
        :param email: The email of this Student.  # noqa: E501
        :type email: str
        :param course: The course of this Student.  # noqa: E501
        :type course: str
        """
        self.swagger_types = {
            'id': int,
            'name': str,
            'age': int,
            'email': str,
            'course': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'age': 'age',
            'email': 'email',
            'course': 'course'
        }
        self._id = id
        self._name = name
        self._age = age
        self._email = email
        self._course = course
    

    @classmethod
    def from_dict(cls, dikt) -> 'Student':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Student of this Student.  # noqa: E501
        :rtype: Student
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Student.

        Unique identifier for the student  # noqa: E501

        :return: The id of this Student.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Student.

        Unique identifier for the student  # noqa: E501

        :param id: The id of this Student.
        :type id: int
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Student.

        Name of the student  # noqa: E501

        :return: The name of this Student.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Student.

        Name of the student  # noqa: E501

        :param name: The name of this Student.
        :type name: str
        """

        self._name = name

    @property
    def age(self) -> int:
        """Gets the age of this Student.

        Age of the student  # noqa: E501

        :return: The age of this Student.
        :rtype: int
        """
        return self._age

    @age.setter
    def age(self, age: int):
        """Sets the age of this Student.

        Age of the student  # noqa: E501

        :param age: The age of this Student.
        :type age: int
        """

        self._age = age

    @property
    def email(self) -> str:
        """Gets the email of this Student.

        Email address of the student  # noqa: E501

        :return: The email of this Student.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this Student.

        Email address of the student  # noqa: E501

        :param email: The email of this Student.
        :type email: str
        """

        self._email = email

    @property
    def course(self) -> str:
        """Gets the course of this Student.

        Course the student is enrolled in  # noqa: E501

        :return: The course of this Student.
        :rtype: str
        """
        return self._course

    @course.setter
    def course(self, course: str):
        """Sets the course of this Student.

        Course the student is enrolled in  # noqa: E501

        :param course: The course of this Student.
        :type course: str
        """

        self._course = course
